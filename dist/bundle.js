(()=>{"use strict";const o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const e=new Uint8Array(16);function n(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const r=[];for(let o=0;o<256;++o)r.push((o+256).toString(16).slice(1));const s=function(t,e,s){if(o.randomUUID&&!e&&!t)return o.randomUUID();const a=(t=t||{}).random||(t.rng||n)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,e){s=s||0;for(let o=0;o<16;++o)e[s+o]=a[o];return e}return function(o,t=0){return(r[o[t+0]]+r[o[t+1]]+r[o[t+2]]+r[o[t+3]]+"-"+r[o[t+4]]+r[o[t+5]]+"-"+r[o[t+6]]+r[o[t+7]]+"-"+r[o[t+8]]+r[o[t+9]]+"-"+r[o[t+10]]+r[o[t+11]]+r[o[t+12]]+r[o[t+13]]+r[o[t+14]]+r[o[t+15]]).toLowerCase()}(a)};class a{constructor(o,t,e,n){this.id=s(),this.name=o,this.price=t,this.description=e,this.quantity=n}}const i=new class{constructor(){this.inventory=[]}stockInventory(o){this.inventory.push(o)}},c=new a("Hylian Shield",50,"a sturdy shield to keep you alive a little longer out there",1),l=new a("Arrows",15,"a bundle of x5 arrows, good for keeping pesky Chuchus at a safe distance",1),d=new a("Apple",5,"good for eating, better for cooking, even works as a projectile if needed",1),u=new a("Majora's Mask",1e5,"a strange mask that exudes a palpable aura of mystery and ...power, almost as if it is calling out to you",1);i.stockInventory(c),i.stockInventory(l),i.stockInventory(d),i.stockInventory(u),console.log(i.inventory);const p=new class{constructor(o,t){this.id=s(),this.name=o,this.age=t,this.cart=[]}addToCart(o,t){const e=this.cart.find((t=>t.id===o.id));e?e.quantity+=t:this.cart.push(Object.assign(Object.assign({},o),{quantity:t}))}removeFromCart(o){this.cart=this.cart.filter((t=>t.id!==o.id))}removeSomeFromCart(o,t){let e=t;this.cart=this.cart.filter((n=>!(n.id===o.id&&e>0&&(e-=t,1))))}cartTotal(){const o=this.cart.reduce(((o,t)=>o+t.price*t.quantity),0);return`${p.name}'s total price: $${o}`}printCart(){console.log(`${this.name}'s Shopping Cart: `),this.cart.forEach((o=>{console.log(`${o.name} (Quantity: ${o.quantity}, Price: $${o.price*o.quantity})\n`)}))}}("Link",20);p.addToCart(c,2),p.addToCart(l,5),p.addToCart(d,3),p.addToCart(u,1),console.log(p.printCart()),console.log(p.cartTotal()),console.log(""),console.log("/////////////////////////////////////////////////////////"),console.log("///////////////////// AFTER REMOVING ////////////////////"),console.log("/////////////////////////////////////////////////////////"),console.log(""),p.removeFromCart(c),console.log(p.printCart()),console.log(p.cartTotal()),console.log(""),console.log("/////////////////////////////////////////////////////////"),console.log("///////////////////// AFTER REMOVING ////////////////////"),console.log("/////////////////////////////////////////////////////////"),console.log(""),p.removeFromCart(u),console.log(p.printCart()),console.log(p.cartTotal())})();